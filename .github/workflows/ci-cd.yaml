name: Python application
# workflow
# when ever we push or pull on main branch then this action will run
# then it will run these JOBS
on:
  push:
    branches:
    - main
    # name of branch
  pull_request:
    branches:
    - main

jobs:
  build:
# ubuntu latest version
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
# name is just a NAME , name given to steps
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install dependencies
# running certain commands installing -> "flake8, pytest, requirement"
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
# checking the python coding standards using flake8
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
# model testing with pytest using "pytest -v"
    - name: Test with pytest
      run: |
        pytest -v

# previous was full of contineous integration

# now contineous deployment
# deploying to heroku
#    - name: Deploy to Heroku
#      env:
#        HEROKU_API_TOKEN: ${{ secrets.HEROKU_API_TOKEN }}
#        HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
#      if: github.ref == 'refs/heads/main' && job.status == 'success'
      # main branch
      # in main branch if JOB is success then only this run will execute
#      run: |
#        git remote add heroku https://heroku:$HEROKU_API_TOKEN@git.heroku.com/$HEROKU_APP_NAME.git
#        git push heroku HEAD:main -f